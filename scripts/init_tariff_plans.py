import asyncio
from sqlalchemy.ext.asyncio import AsyncSession
from app.database.connection import AsyncSessionLocal
from app.models.database import TariffPlan
from app.repositories.base_dao import BaseDAO

async def init_tariff_plans():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞—Ä–∏—Ñ–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞—Ä–∏—Ñ–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤...")
    
    try:
        async with AsyncSessionLocal() as session:
            dao = BaseDAO(TariffPlan)
            
            # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–ª–∞–Ω—ã
            plans = [
                {
                    "plan_code": "free",
                    "name": "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω",
                    "monthly_units": 10.0,
                    "price_rub": 0
                },
                {
                    "plan_code": "base750",
                    "name": "–ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω",
                    "monthly_units": 750.0,
                    "price_rub": 29900  # 299 —Ä—É–±–ª–µ–π –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                },
                {
                    "plan_code": "pro1500",
                    "name": "–ü—Ä–æ –ø–ª–∞–Ω",
                    "monthly_units": 1500.0,
                    "price_rub": 49900  # 499 —Ä—É–±–ª–µ–π –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                }
            ]
            
            for plan_data in plans:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–ª–∞–Ω
                existing = await session.execute(
                    f"SELECT id FROM tariff_plans WHERE plan_code = '{plan_data['plan_code']}'"
                )
                
                if not existing.scalar():
                    plan = TariffPlan(**plan_data)
                    await dao.create(session, plan)
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–ª–∞–Ω: {plan_data['name']}")
                else:
                    print(f"‚ÑπÔ∏è  –ü–ª–∞–Ω {plan_data['name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(init_tariff_plans()) 