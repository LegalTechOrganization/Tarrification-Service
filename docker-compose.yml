version: '3.8'

services:
  billing-service:
    build: .
    ports:
      - "8001:8001"
    environment:
      - DB_DSN=postgresql+asyncpg://billing_user:billing_pass@postgres:5432/billing_db
      - SERVICE_TOKEN=super-secret-dev
      - RESET_CRON=0 0 * * *
      - KAFKA_BOOTSTRAP_SERVERS=billing-kafka:29092
    depends_on:
      - postgres
      - billing-kafka
    volumes:
      - ./app:/app/app  # Для разработки
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=billing_db
      - POSTGRES_USER=billing_user
      - POSTGRES_PASSWORD=billing_pass
    ports:
      - "5456:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  billing-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: billing-zookeeper
    container_name: billing-zookeeper
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  billing-kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: billing-kafka
    container_name: billing-kafka
    depends_on:
      - billing-zookeeper
    ports:
      - "29093:29092"
      - "9093:9092"
      - "9102:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'billing-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://billing-kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

volumes:
  postgres_data: 